"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"$schema":"http://json-schema.org/draft-07/schema#","$id":"try-schema.json","title":"Tryin' on JSON Schema Spec","type":"object","properties":{"productId":{"type":"integer"},"productName":{"type":"string"},"price":{"type":"number","exclusiveMinimum":0},"tags":{"type":"array","items":{"type":"string"},"minItems":1,"uniqueItems":true},"dimensions":{"type":"object","properties":{"length":{"type":"number"},"width":{"type":"number"},"height":{"type":"number"}},"required":["length","width","height"]},"warehouseLocation":{"$ref":"point.json"}},"required":["productId","productName","price"]};const schema23 = {"$schema":"http://json-schema.org/draft-07/schema#","$id":"point.json","title":"GeoJSON Point","type":"object","required":["type","coordinates"],"properties":{"type":{"type":"string","enum":["Point"]},"coordinates":{"type":"array","minItems":2,"items":{"type":"number"}},"bbox":{"type":"array","minItems":4,"items":{"type":"number"}}}};const func0 = require("ajv/dist/runtime/equal").default;function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="try-schema.json" */;let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.productId === undefined) && (missing0 = "productId")) || ((data.productName === undefined) && (missing0 = "productName"))) || ((data.price === undefined) && (missing0 = "price"))){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.productId !== undefined){let data0 = data.productId;const _errs1 = errors;if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){validate20.errors = [{instancePath:instancePath+"/productId",schemaPath:"#/properties/productId/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.productName !== undefined){const _errs3 = errors;if(typeof data.productName !== "string"){validate20.errors = [{instancePath:instancePath+"/productName",schemaPath:"#/properties/productName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.price !== undefined){let data2 = data.price;const _errs5 = errors;if(errors === _errs5){if((typeof data2 == "number") && (isFinite(data2))){if(data2 <= 0 || isNaN(data2)){validate20.errors = [{instancePath:instancePath+"/price",schemaPath:"#/properties/price/exclusiveMinimum",keyword:"exclusiveMinimum",params:{comparison: ">", limit: 0},message:"must be > 0"}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/price",schemaPath:"#/properties/price/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.tags !== undefined){let data3 = data.tags;const _errs7 = errors;if(errors === _errs7){if(Array.isArray(data3)){if(data3.length < 1){validate20.errors = [{instancePath:instancePath+"/tags",schemaPath:"#/properties/tags/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid1 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){const _errs9 = errors;if(typeof data3[i0] !== "string"){validate20.errors = [{instancePath:instancePath+"/tags/" + i0,schemaPath:"#/properties/tags/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs9 === errors;if(!valid1){break;}}if(valid1){let i1 = data3.length;let j0;if(i1 > 1){const indices0 = {};for(;i1--;){let item0 = data3[i1];if(typeof item0 !== "string"){continue;}if(typeof indices0[item0] == "number"){j0 = indices0[item0];validate20.errors = [{instancePath:instancePath+"/tags",schemaPath:"#/properties/tags/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break;}indices0[item0] = i1;}}}}}else {validate20.errors = [{instancePath:instancePath+"/tags",schemaPath:"#/properties/tags/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.dimensions !== undefined){let data5 = data.dimensions;const _errs11 = errors;if(errors === _errs11){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){let missing1;if((((data5.length === undefined) && (missing1 = "length")) || ((data5.width === undefined) && (missing1 = "width"))) || ((data5.height === undefined) && (missing1 = "height"))){validate20.errors = [{instancePath:instancePath+"/dimensions",schemaPath:"#/properties/dimensions/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data5.length !== undefined){let data6 = data5.length;const _errs13 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate20.errors = [{instancePath:instancePath+"/dimensions/length",schemaPath:"#/properties/dimensions/properties/length/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs13 === errors;}else {var valid3 = true;}if(valid3){if(data5.width !== undefined){let data7 = data5.width;const _errs15 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate20.errors = [{instancePath:instancePath+"/dimensions/width",schemaPath:"#/properties/dimensions/properties/width/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs15 === errors;}else {var valid3 = true;}if(valid3){if(data5.height !== undefined){let data8 = data5.height;const _errs17 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){validate20.errors = [{instancePath:instancePath+"/dimensions/height",schemaPath:"#/properties/dimensions/properties/height/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs17 === errors;}else {var valid3 = true;}}}}}else {validate20.errors = [{instancePath:instancePath+"/dimensions",schemaPath:"#/properties/dimensions/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.warehouseLocation !== undefined){let data9 = data.warehouseLocation;const _errs19 = errors;const _errs20 = errors;if(errors === _errs20){if(data9 && typeof data9 == "object" && !Array.isArray(data9)){let missing2;if(((data9.type === undefined) && (missing2 = "type")) || ((data9.coordinates === undefined) && (missing2 = "coordinates"))){validate20.errors = [{instancePath:instancePath+"/warehouseLocation",schemaPath:"point.json/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data9.type !== undefined){let data10 = data9.type;const _errs22 = errors;if(typeof data10 !== "string"){validate20.errors = [{instancePath:instancePath+"/warehouseLocation/type",schemaPath:"point.json/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data10 === "Point")){validate20.errors = [{instancePath:instancePath+"/warehouseLocation/type",schemaPath:"point.json/properties/type/enum",keyword:"enum",params:{allowedValues: schema23.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid5 = _errs22 === errors;}else {var valid5 = true;}if(valid5){if(data9.coordinates !== undefined){let data11 = data9.coordinates;const _errs24 = errors;if(errors === _errs24){if(Array.isArray(data11)){if(data11.length < 2){validate20.errors = [{instancePath:instancePath+"/warehouseLocation/coordinates",schemaPath:"point.json/properties/coordinates/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"}];return false;}else {var valid6 = true;const len1 = data11.length;for(let i2=0; i2<len1; i2++){let data12 = data11[i2];const _errs26 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate20.errors = [{instancePath:instancePath+"/warehouseLocation/coordinates/" + i2,schemaPath:"point.json/properties/coordinates/items/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs26 === errors;if(!valid6){break;}}}}else {validate20.errors = [{instancePath:instancePath+"/warehouseLocation/coordinates",schemaPath:"point.json/properties/coordinates/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid5 = _errs24 === errors;}else {var valid5 = true;}if(valid5){if(data9.bbox !== undefined){let data13 = data9.bbox;const _errs28 = errors;if(errors === _errs28){if(Array.isArray(data13)){if(data13.length < 4){validate20.errors = [{instancePath:instancePath+"/warehouseLocation/bbox",schemaPath:"point.json/properties/bbox/minItems",keyword:"minItems",params:{limit: 4},message:"must NOT have fewer than 4 items"}];return false;}else {var valid7 = true;const len2 = data13.length;for(let i3=0; i3<len2; i3++){let data14 = data13[i3];const _errs30 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){validate20.errors = [{instancePath:instancePath+"/warehouseLocation/bbox/" + i3,schemaPath:"point.json/properties/bbox/items/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid7 = _errs30 === errors;if(!valid7){break;}}}}else {validate20.errors = [{instancePath:instancePath+"/warehouseLocation/bbox",schemaPath:"point.json/properties/bbox/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid5 = _errs28 === errors;}else {var valid5 = true;}}}}}else {validate20.errors = [{instancePath:instancePath+"/warehouseLocation",schemaPath:"point.json/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs19 === errors;}else {var valid0 = true;}}}}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}